// function: returns list of variables in the current context
func f (a, b, c) {
	f = '';
	for each (_k in self())
		f += "$_k=(" + ref(_k) + '); ';
};

// procedure: returns list of variables in the current context
proc p (a, b, c) {
	p = '';
	for each (_k in self())
		p += "$_k=(" + ref(_k) + '); ';
};

// function returning the result of another function
func ff (d, e, f) {
	ff = f(d, e, f);
};

// function returning the result of a procedure
func fp (d, e, f) {
	fp = p(d, e, f);
};

// procedure returning the result of a function
proc pf (d, e, f) {
	pf = f(d, e, f);
};

// procedure returning the result of another procedure
proc pp (d, e, f) {
	pp = p(d, e, f);
};

// accepts space delimited list of `key=value' pairs automatically mapped
// to local variables concluding with function name
S :=
	( '^\w+' '=' '^[^\s]+' { ref($2)=$; } )*
	'^\w+' { res = call($, 1, 2, 3); } ^$;
