namespace mandelbrot ;

func marker(_j) {
    switch (_j) {
        case 9: return ' ' ;
        case 8: return '.' ;
        case 7: return ':' ;
        case 6: return '+' ;
        case 5: return '@' ;
        case 4: return '=' ;
        case 3: return '*' ;
        case 2: return '%' ;
        case 1: return '$' ;
        default:return '#' ;
    }
} ;

node S {

    max_steps = 10 ;

    s = '' ;
    iteration_count = 0 ;

    width = (width == null) ? 100 : integer(width) ;
    height = (height == null) ? 49 : integer(height) ;

    max_dist = 6.0 ;
    x0 = -1.5 ;
    x1 =  0.5 ;
    y0 = -1.0 ;
    y1 =  1.0 ;

    dx = (x1 - x0) / (width - 1) ;
    dy = (y1 - y0) / (height - 1) ;

    i: for ( _i = 0 ; _i < height ; ++ _i )
    {
        y = y0 + dy * _i ;

        j: for ( _j = 0 ; _j < width ; ++ _j )
        {
            x = x0 + dx * _j ;

            _k = 0 ;
            Zx = 0.0 ;
            Zy = 0.0 ;
            k: for ( _k = 0 ; _k < max_steps ; ++ _k )
            {
                _Zx = Zx*Zx - Zy*Zy + x ;
                _Zy = 2.0*Zx*Zy + y ;
                if (_Zx*_Zx + _Zy*_Zy >= max_dist)
                    break k ;
                Zx = _Zx ;
                Zy = _Zy ;

                ++ iteration_count ;
            }

            s += marker(_k % max_steps) ;
        }

        s += '\n' ;
    }

} ;
